<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var networkType = network_socket_tcp;
var port = 50000;
var maxPlayers = 32; //32
var bufferSize = 1024;
var bufferType = buffer_fixed;
var bufferAlignment = 1;

server = network_create_server(networkType, port, maxPlayers);
global.buffer = buffer_create(bufferSize, bufferType, bufferAlignment);

sockets = ds_list_create();

with(obj_message)
{
    instance_destroy();
}

var notification = instance_create(0, 0, obj_message);
notification.message = 'Servidor ligado!';
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var eventType = ds_map_find_value(async_load, 'type');
switch(eventType)
{
    case network_type_connect:
        var socket = ds_map_find_value(async_load, 'socket');
        ds_list_add(sockets, socket);
        
        with(obj_message)
        {
            instance_destroy();
        }
        
        var notification = instance_create(0, 0, obj_message);
        notification.message = 'New player entered!';
    break;
    case network_type_disconnect:
        var socket = ds_map_find_value(async_load, 'socket');
        var findSocket = ds_list_find_index(sockets, socket);
        
        if (findSocket &gt;=0)
        {
            ds_list_delete(sockets, findSocket);
        }
        
        with(obj_message)
        {
            instance_destroy();
        }
        
        var notification = instance_create(0, 0, obj_message);
        notification.message = 'Player left!';
    break;
    case network_type_data:
        var buffer = ds_map_find_value(async_load, 'buffer');
        var socket = ds_map_find_value(async_load, 'id');
        buffer_seek(buffer, buffer_seek_start, 0);
        scr_handleIncomingPackets_server(buffer, socket);
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>network_destroy(server);
buffer_delete(global.buffer);
ds_list_destroy(sockets);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_white);
draw_text(5, 5, 'Server status: ' + string(server &gt;= 0));
draw_text(5, 20, 'Total clients: ' + string(ds_list_size(sockets)));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
